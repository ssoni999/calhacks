from sqlalchemy import Column, Integer, String, Float, Text, ForeignKey, DateTime
from sqlalchemy.orm import relationship
from database import Base
import datetime

class Recruiter(Base):
    __tablename__ = "recruiters"
    
    id = Column(Integer, primary_key=True, index=True)
    name = Column(String, index=True)
    email = Column(String, unique=True, index=True)
    created_at = Column(DateTime, default=None)
    
    candidates = relationship("Candidate", back_populates="recruiter")

class Candidate(Base):
    __tablename__ = "candidates"
    
    id = Column(Integer, primary_key=True, index=True)
    name = Column(String, index=True)
    email = Column(String, index=True)
    position = Column(String)
    resume_text = Column(Text)
    stage = Column(String, default="Resume Review")
    notes = Column(Text, default="")
    
    # AI Analysis Scores (will be generated by semantic/keyword search)
    experience_score = Column(Float, default=None, nullable=True)
    skills_score = Column(Float, default=None, nullable=True)
    education_score = Column(Float, default=None, nullable=True)
    overall_score = Column(Float, default=None, nullable=True)
    cultural_fit_score = Column(Float, default=None, nullable=True)
    analysis_notes = Column(Text, default="")
    
    recruiter_id = Column(Integer, ForeignKey("recruiters.id"))
    recruiter = relationship("Recruiter", back_populates="candidates")
    
    created_at = Column(DateTime, default=None)

